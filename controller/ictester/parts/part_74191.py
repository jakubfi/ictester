from ictester.part import (PackageDIP16, Pin, PinType)
from ictester.test import TestLogic

class Part74191(PackageDIP16):
    name = "74191"
    desc = "Synchronous up/down counter with down/up mode control"
    pin_cfg = {
        1: Pin("B", PinType.IN),
        2: Pin("QB", PinType.OUT),
        3: Pin("QA", PinType.OUT),
        4: Pin("~CTEN", PinType.IN),
        5: Pin("D/~U", PinType.IN),
        6: Pin("QC", PinType.OUT),
        7: Pin("QD", PinType.OUT),
        9: Pin("D", PinType.IN),
        10: Pin("C", PinType.IN),
        11: Pin("~LOAD", PinType.IN),
        12: Pin("MAX/MIN", PinType.OUT),
        13: Pin("~RCO", PinType.OUT),
        14: Pin("CLK", PinType.IN),
        15: Pin("A", PinType.IN),
    }

    test_load = TestLogic("Load",
        inputs=[4, 5, 14, 11,  9, 10, 1, 15],
        outputs=[7, 6, 2, 3,  12, 13],
        body=[
            # loads
            [[1, 1, 0, '-',  1, 1, 1, 1], [1, 1, 1, 1,  0, 1]],
            [[1, 1, 0, '-',  1, 1, 1, 0], [1, 1, 1, 0,  0, 1]],
            [[1, 1, 0, '-',  1, 1, 0, 1], [1, 1, 0, 1,  0, 1]],
            [[1, 1, 0, '-',  1, 1, 0, 0], [1, 1, 0, 0,  0, 1]],
            [[1, 1, 0, '-',  1, 0, 1, 1], [1, 0, 1, 1,  0, 1]],
            [[1, 1, 0, '-',  1, 0, 1, 0], [1, 0, 1, 0,  0, 1]],
            [[1, 1, 0, '-',  1, 0, 0, 1], [1, 0, 0, 1,  0, 1]],
            [[1, 1, 0, '-',  1, 0, 0, 0], [1, 0, 0, 0,  0, 1]],
            [[1, 1, 0, '-',  0, 1, 1, 1], [0, 1, 1, 1,  0, 1]],
            [[1, 1, 0, '-',  0, 1, 1, 0], [0, 1, 1, 0,  0, 1]],
            [[1, 1, 0, '-',  0, 1, 0, 1], [0, 1, 0, 1,  0, 1]],
            [[1, 1, 0, '-',  0, 1, 0, 0], [0, 1, 0, 0,  0, 1]],
            [[1, 1, 0, '-',  0, 0, 1, 1], [0, 0, 1, 1,  0, 1]],
            [[1, 1, 0, '-',  0, 0, 1, 0], [0, 0, 1, 0,  0, 1]],
            [[1, 1, 0, '-',  0, 0, 0, 1], [0, 0, 0, 1,  0, 1]],
            [[1, 1, 0, '-',  0, 0, 0, 0], [0, 0, 0, 0,  1, 1]],
        ]
    )

    test_count_up = TestLogic("Count Up",
        inputs=[4, 5, 14, 11,  9, 10, 1, 15],
        outputs=[7, 6, 2, 3,  12, 13],
        body=[
            # load 0
            [[1, 1, 0, '-',  0, 0, 0, 0], [0, 0, 0, 0,  1, 1]],
            # changes on enable input only when clock is high
            [[1, 1, 1, 0,  0, 0, 0, 0], [0, 0, 0, 0,  1, 1]],
            [[0, 0, 1, 0,  0, 0, 0, 0], [0, 0, 0, 0,  0, 1]],
            # count up
            [[0, 0, '/', 1,  0, 0, 0, 0], [0, 0, 0, 1,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [0, 0, 1, 0,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [0, 0, 1, 1,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [0, 1, 0, 0,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [0, 1, 0, 1,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [0, 1, 1, 0,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [0, 1, 1, 1,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [1, 0, 0, 0,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [1, 0, 0, 1,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [1, 0, 1, 0,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [1, 0, 1, 1,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [1, 1, 0, 0,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [1, 1, 0, 1,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [1, 1, 1, 0,  0, 1]],
            [[0, 0, '/', 1,  0, 0, 0, 0], [1, 1, 1, 1,  1, 1]],
            [[0, 0,  0,  1,  0, 0, 0, 0], [1, 1, 1, 1,  1, 0]],  # ~RCD low for half clock
            [[0, 0, '/', 1,  0, 0, 0, 0], [0, 0, 0, 0,  0, 1]],
        ]
    )

    test_count_down = TestLogic("Count Down",
        inputs=[4, 5, 14, 11,  9, 10, 1, 15],
        outputs=[7, 6, 2, 3,  12, 13],
        body=[
            # load all 0
            [[1, 1, 0, '-',  0, 0, 0, 1], [0, 0, 0, 1,  0, 1]],
            # changes on enable input only when clock is high
            [[1, 1, 1, 0,  0, 0, 0, 1], [0, 0, 0, 1,  0, 1]],
            [[0, 1, 1, 0,  0, 0, 0, 1], [0, 0, 0, 1,  0, 1]],
            # count down
            [[0, 1, '/', 1,  0, 0, 0, 0], [0, 0, 0, 0,  1, 1]],
            [[0, 1,  0 , 1,  0, 0, 0, 0], [0, 0, 0, 0,  1, 0]],  # ~RCD low for half clock
            [[0, 1, '/', 1,  0, 0, 0, 0], [1, 1, 1, 1,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [1, 1, 1, 0,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [1, 1, 0, 1,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [1, 1, 0, 0,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [1, 0, 1, 1,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [1, 0, 1, 0,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [1, 0, 0, 1,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [1, 0, 0, 0,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [0, 1, 1, 1,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [0, 1, 1, 0,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [0, 1, 0, 1,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [0, 1, 0, 0,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [0, 0, 1, 1,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [0, 0, 1, 0,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [0, 0, 0, 1,  0, 1]],
            [[0, 1, '/', 1,  0, 0, 0, 0], [0, 0, 0, 0,  1, 1]],
            [[0, 1,  0,  1,  0, 0, 0, 0], [0, 0, 0, 0,  1, 0]],  # ~RCD low for half clock
        ]
    )

    test_inhibit = TestLogic("Inhibit",
        inputs=[4, 5, 14, 11,  9, 10, 1, 15],
        outputs=[7, 6, 2, 3,  12, 13],
        body=[
            # load all 0
            [[1, 1, 0, '-',  0, 0, 0, 0], [0, 0, 0, 0,  1, 1]],
            # changes on enable input only when clock is high
            [[1, 1, 1, 0,  0, 0, 0, 0], [0, 0, 0, 0,  1, 1]],
            [[0, 0, 1, 0,  0, 0, 0, 0], [0, 0, 0, 0,  0, 1]],
            # count inhibited
            [[1, 1, '/', 1,  0, 0, 0, 0], [0, 0, 0, 0,  1, 1]],
            [[1, 1, '/', 1,  0, 0, 0, 0], [0, 0, 0, 0,  1, 1]],
            [[1, 0, '/', 1,  0, 0, 0, 0], [0, 0, 0, 0,  0, 1]],
            [[1, 0, '/', 1,  0, 0, 0, 0], [0, 0, 0, 0,  0, 1]],
        ]
    )

    tests = [test_load, test_count_up, test_count_down, test_inhibit]
