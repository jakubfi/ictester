from ictester.part import (PackageDIP16, Pin, PinType)
from ictester.test import TestLogic

class Part74165(PackageDIP16):
    name = "74165"
    desc = "8-bit parallel-out serial shift register"
    pin_cfg = {
        1: Pin("SH/~LD", PinType.IN),
        2: Pin("CLK", PinType.IN),
        3: Pin("E", PinType.IN),
        4: Pin("F", PinType.IN),
        5: Pin("G", PinType.IN),
        6: Pin("H", PinType.IN),
        7: Pin("~QH", PinType.OUT),
        9: Pin("QH", PinType.OUT),
        10: Pin("SER", PinType.IN),
        11: Pin("A", PinType.IN),
        12: Pin("B", PinType.IN),
        13: Pin("C", PinType.IN),
        14: Pin("D", PinType.IN),
        15: Pin("CLK_INH", PinType.IN),
    }

    test_load_shift = TestLogic(
        name="Parallel load, shift out",
        inputs=[1, 15, 2,  10,  11, 12, 13, 14, 3, 4, 5, 6],
        outputs=[9, 7],
        body=[
            # load "0"
            [['-', 1,   0,  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            # shift out all "0"
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],  # empty
            # load all "1"
            [['-', 1,   0,  0,  1, 1, 1, 1, 1, 1, 1, 1], [1, 0]],
            # shift out all "1"
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],  # empty
        ]
    )

    test_shift_in_out = TestLogic(
        name="Shift in/out",
        inputs=[1, 15, 2,  10,  11, 12, 13, 14, 3, 4, 5, 6],
        outputs=[9, 7],
        body=[
            # load "0"
            [['-', 1,   0,  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            # shift in "1"
            [[  1, 0, '/',  1,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  1,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  1,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  1,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  1,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  1,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  1,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 0, '/',  1,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            # shift in "0"
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [1, 0]],
            [[  1, 0, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
        ]
    )

    test_inhibit = TestLogic(
        name="Clock inhibit",
        inputs=[1, 15, 2,  10,  11, 12, 13, 14, 3, 4, 5, 6],
        outputs=[9, 7],
        body=[
            # load alternating pattern
            [['-', 1,   0,  0,  1, 0, 1, 0, 1, 0, 1, 0], [0, 1]],
            # don't shift out
            [[  1, 1, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 1, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 1, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 1, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 1, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 1, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 1, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
            [[  1, 1, '/',  0,  0, 0, 0, 0, 0, 0, 0, 0], [0, 1]],
        ]
    )



    tests = [test_load_shift, test_shift_in_out, test_inhibit]
